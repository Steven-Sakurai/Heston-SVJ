setwd('~/Desktop/svj_stoc/')
options(digits=12)
set.seed(1)
seed = c(1, 321, 2, 132)
library(Rcpp)
library(BH)
library(nloptr)
library(ggplot2)
library(gridExtra)
sourceCpp('Simulation.cpp')
sourceCpp('nll.cpp', verbose = F)
par = c(0.05, 3, 0.08, 0.3038, -0.6974, 5, 50, -0.3151, 0.25)
y = SimSVJ(par, 1001, log(100), par[3], 1/252, seed[1], seed[2], seed[3], seed[4])
f <- function(p) {
return(nll(p, y))
}
start.time = Sys.time()
a = f(par)
Sys.time() - start.time
print(a)
source('conv_plot.R')
start.time = Sys.time()
lb = c(-0.5, 0.001, 1e-6, 0.001, -0.99, 0, 0, -1, 0)
ub = c(1, 100, 1, 1, 0.99, 100, 1000, 0, 1)
opts <- list(algorithm="NLOPT_LN_NELDERMEAD", xtol_rel=1.0e-4, "maxeval"=10000, print_level = 0)
par = c(0.05, 3, 0.08, 0.3038, -0.6974, 5, 50, -0.3151, 0.25)
#testpar = c(0.05, 3, 0.08, 0.3038, -0.6974, 0.001, 100, -0.3151, 0.25)
res1 = nloptr(x0 = par, eval_f = f, opts = opts, lb = lb, ub = ub)
start.time = Sys.time()
lb = c(-0.5, 0.001, 1e-6, 0.001, -0.99, 0, 0, -1, 0)
ub = c(1, 100, 1, 1, 0.99, 100, 1000, 0, 1)
opts <- list(algorithm="NLOPT_LN_NELDERMEAD", xtol_rel=1.0e-4, "maxeval"=10000, print_level = 0)
#par = c(0.05, 3, 0.08, 0.3038, -0.6974, 5, 50, -0.3151, 0.25)
testpar = c(0.05, 3, 0.08, 0.3038, -0.6974, 10, 0, -0.3151, 0.25)
res2 = nloptr(x0 = testpar, eval_f = f, opts = opts, lb = lb, ub = ub)
print(res2)
Sys.time() - start.time
c_list = check.converge(f, res2$solution)
print("Convergence:")
print(c_list)
m_list = check.mono(f, res2$solution)
print("Success:")
print(all(m_list || c_list))
source('conv_plot.R')
p = converge.plot(res2$solution)
print(p)
ggsave('./conv_res2.eps', p, width = 10, height = 7)
source('conv_plot.R')
p = converge.plot(res2$solution)
print(p)
ggsave('./conv_res2.eps', p, width = 10, height = 7)
start.time = Sys.time()
lb = c(-0.5, 0.001, 1e-6, 0.001, -0.99, 0, 0, -1, 0)
ub = c(1, 100, 1, 1, 0.99, 100, 1000, 0, 1)
opts <- list(algorithm="NLOPT_LN_NELDERMEAD", xtol_rel=1.0e-4, "maxeval"=10000, print_level = 0)
#par = c(0.05, 3, 0.08, 0.3038, -0.6974, 5, 50, -0.3151, 0.25)
testpar = c(0.05, 3, 0.08, 0.3038, -0.6974, 10, 0ã€‚01, -0.3151, 0.25)
start.time = Sys.time()
lb = c(-0.5, 0.001, 1e-6, 0.001, -0.99, 0, 0, -1, 0)
ub = c(1, 100, 1, 1, 0.99, 100, 1000, 0, 1)
opts <- list(algorithm="NLOPT_LN_NELDERMEAD", xtol_rel=1.0e-4, "maxeval"=10000, print_level = 0)
#par = c(0.05, 3, 0.08, 0.3038, -0.6974, 5, 50, -0.3151, 0.25)
testpar = c(0.05, 3, 0.08, 0.3038, -0.6974, 10, 0.01, -0.3151, 0.25)
res2 = nloptr(x0 = testpar, eval_f = f, opts = opts, lb = lb, ub = ub)
print(res2)
Sys.time() - start.time
c_list = check.converge(f, res2$solution)
print("Convergence:")
print(c_list)
m_list = check.mono(f, res2$solution)
print("Success:")
print(all(m_list || c_list))
library(numDeriv)
#hess = hessian(f, par)
hess = hessian(f, res1$solution)
library(matrixcalc)
is.singular.matrix(hess)
source('conv_plot.R')
p = converge.plot(res1$solution)
print(p)
ggsave('./conv_res1.eps', p, width = 10, height = 7)
source('conv_plot.R')
p = converge.plot(res2$solution)
print(p)
ggsave('./conv_res2.eps', p, width = 10, height = 7)
source('conv_plot.R')
p = converge.plot(res1$solution)
print(p)
ggsave('./conv_res1.eps', p, width = 10, height = 7)
source('conv_plot.R')
p = converge.plot(res2$solution)
print(p)
ggsave('./conv_res2.eps', p, width = 10, height = 7)
add[i] = 0.001
add = sapply(add, function(x) x*seq(-8, 8, 1))
add = rep(0, n)
n = 9
add = rep(0, n)
add[i] = 0.001
add = sapply(add, function(x) x*seq(-8, 8, 1))
i = 6
add[i] = 0.001
add = sapply(add, function(x) x*seq(-8, 8, 1))
add
dim(add)
add[1, 6]
add[2, 6]
res2
start.time = Sys.time()
lb = c(-0.5, 0.001, 1e-6, 0.001, -0.99, 0, 0, -1, 0)
ub = c(1, 100, 1, 1, 0.99, 100, 1000, 0, 1)
opts <- list(algorithm="NLOPT_LN_NELDERMEAD", xtol_rel=1.0e-4, "maxeval"=10000, print_level = 0)
#par = c(0.05, 3, 0.08, 0.3038, -0.6974, 5, 50, -0.3151, 0.25)
testpar = c(0.05, 3, 0.08, 0.3038, -0.6974, 10, 0, -0.3151, 0.25)
res2 = nloptr(x0 = testpar, eval_f = f, opts = opts, lb = lb, ub = ub)
print(res2)
Sys.time() - start.time
c_list = check.converge(f, res2$solution)
print("Convergence:")
print(c_list)
m_list = check.mono(f, res2$solution)
print("Success:")
print(all(m_list || c_list))
source('conv_plot.R')
p = converge.plot(res2$solution)
print(p)
ggsave('./conv_res2.eps', p, width = 10, height = 7)
start.time = Sys.time()
lb = c(-0.5, 0.001, 1e-6, 0.001, -0.99, 0, 0, -1, 0)
ub = c(1, 100, 1, 1, 0.99, 100, 1000, 0, 1)
opts <- list(algorithm="NLOPT_LN_NELDERMEAD", xtol_rel=1.0e-6, "maxeval"=10000, print_level = 0)
#par = c(0.05, 3, 0.08, 0.3038, -0.6974, 5, 50, -0.3151, 0.25)
testpar = c(0.05, 3, 0.08, 0.3038, -0.6974, 10, 0, -0.3151, 0.25)
res2 = nloptr(x0 = testpar, eval_f = f, opts = opts, lb = lb, ub = ub)
print(res2)
Sys.time() - start.time
c_list = check.converge(f, res2$solution)
print("Convergence:")
print(c_list)
m_list = check.mono(f, res2$solution)
print("Success:")
print(all(m_list || c_list))
source('conv_plot.R')
p = converge.plot(res2$solution)
print(p)
ggsave('./conv_res2.eps', p, width = 10, height = 7)
start.time = Sys.time()
lb = c(-0.5, 0.001, 1e-6, 0.001, -0.99, 0, 0, -1, 0)
ub = c(1, 100, 1, 1, 0.99, 100, 1000, 0, 1)
opts <- list(algorithm="NLOPT_LN_NELDERMEAD", xtol_rel=1.0e-6, "maxeval"=10000, print_level = 0)
#par = c(0.05, 3, 0.08, 0.3038, -0.6974, 5, 50, -0.3151, 0.25)
testpar = c(0.05, 3, 0.08, 0.3038, -0.6974, 10, 0, -0.3151, 0.25)
res2 = nloptr(x0 = testpar, eval_f = f, opts = opts, lb = lb, ub = ub)
print(res2)
Sys.time() - start.time
c_list = check.converge(f, res2$solution)
print("Convergence:")
print(c_list)
m_list = check.mono(f, res2$solution)
print(m_list)
print("Success:")
print(all(m_list || c_list))
(m_list || c_list
)
m_list | c_list
source('conv_plot.R')
start.time = Sys.time()
lb = c(-0.5, 0.001, 1e-6, 0.001, -0.99, 0, 0, -1, 0)
ub = c(1, 100, 1, 1, 0.99, 100, 1000, 0, 1)
opts <- list(algorithm="NLOPT_LN_NELDERMEAD", xtol_rel=1.0e-4, "maxeval"=10000, print_level = 0)
par = c(0.05, 3, 0.08, 0.3038, -0.6974, 5, 50, -0.3151, 0.25)
#testpar = c(0.05, 3, 0.08, 0.3038, -0.6974, 0.001, 100, -0.3151, 0.25)
res1 = nloptr(x0 = par, eval_f = f, opts = opts, lb = lb, ub = ub)
source('conv_plot.R')
start.time = Sys.time()
lb = c(-0.5, 0.001, 1e-6, 0.001, -0.99, 0, 0, -1, 0)
ub = c(1, 100, 1, 1, 0.99, 100, 1000, 0, 1)
opts <- list(algorithm="NLOPT_LN_NELDERMEAD", xtol_rel=1.0e-4, "maxeval"=10000, print_level = 0)
par = c(0.05, 3, 0.08, 0.3038, -0.6974, 5, 50, -0.3151, 0.25)
#testpar = c(0.05, 3, 0.08, 0.3038, -0.6974, 0.001, 100, -0.3151, 0.25)
res1 = nloptr(x0 = par, eval_f = f, opts = opts, lb = lb, ub = ub)
print(res1)
Sys.time() - start.time
c_list = check.converge(f, res1$solution)
print("Convergence:")
print(c_list)
m_list = check.mono(f, res1$solution)
print(m_list)
print("Success:")
print(all(m_list | c_list))
start.time = Sys.time()
lb = c(-0.5, 0.001, 1e-6, 0.001, -0.99, 0, 0, -1, 0)
ub = c(1, 100, 1, 1, 0.99, 100, 1000, 0, 1)
opts <- list(algorithm="NLOPT_LN_NELDERMEAD", xtol_rel=1.0e-6, "maxeval"=10000, print_level = 0)
#par = c(0.05, 3, 0.08, 0.3038, -0.6974, 5, 50, -0.3151, 0.25)
testpar = c(0.05, 3, 0.08, 0.3038, -0.6974, 10, 0, -0.3151, 0.25)
res2 = nloptr(x0 = testpar, eval_f = f, opts = opts, lb = lb, ub = ub)
print(res2)
Sys.time() - start.time
c_list = check.converge(f, res2$solution)
print("Convergence:")
print(c_list)
m_list = check.mono(f, res2$solution)
print(m_list)
print("Success:")
print(all(m_list | c_list))
